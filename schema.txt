const mongoose = require("mongoose");

// Product Schema
const productSchema = new mongoose.Schema(
  {
    name: { type: String, required: true },
    image: { type: String, required: true },
    description: { type: String, required: true },
    price: { type: Number, required: true },
    difficulty: {
      type: String,
      enum: ["Beginner", "Intermediate", "Advanced"],
      required: true,
    },
    category: { type: String, required: true },
    link: { type: String, required: true }, // Link ke file PDF
    sellerId: { type: String, required: true }, // Clerk userId dari penjual
    isDeleted: { type: Boolean, default: false }, // Menandai produk yang dihapus
  },
  {
    timestamps: true, // Akan menambahkan createdAt dan updatedAt otomatis
  }
);

// Cart Schema
const cartSchema = new mongoose.Schema({
  userId: { type: String, required: true }, // Clerk userId dari pembeli
  products: [
    {
      product: {
        type: mongoose.Schema.Types.ObjectId,
        ref: "Product",
        required: true,
      },
      price: { type: Number, required: true }, // Harga saat ditambahkan ke cart
    },
  ],
  total: { type: Number, required: true }, // Total harga
  createdAt: { type: Date, default: Date.now },
});

// Order Schema
const orderSchema = new mongoose.Schema({
  userId: { type: String, required: true }, // Clerk userId dari pembeli
  products: [
    {
      product: {
        type: mongoose.Schema.Types.ObjectId,
        ref: "Product",
        required: true,
      },
      price: { type: Number, required: true }, // Harga produk
    },
  ],
  total: { type: Number, required: true },
  emailSent: { type: Boolean, default: false }, // Status email
  createdAt: { type: Date, default: Date.now },
});

// Analytics Schema (Optional for seller dashboard)
const analyticsSchema = new mongoose.Schema({
  sellerId: { type: String, required: true }, // Clerk userId dari penjual
  totalSales: { type: Number, default: 0 }, // Total penjualan
  totalRevenue: { type: Number, default: 0 }, // Pendapatan total
  productStats: [
    {
      product: {
        type: mongoose.Schema.Types.ObjectId,
        ref: "Product",
        required: true,
      },
      salesCount: { type: Number, default: 0 },
      revenue: { type: Number, default: 0 },
    },
  ],
});

module.exports = {
  Product: mongoose.model("Product", productSchema),
  Cart: mongoose.model("Cart", cartSchema),
  Order: mongoose.model("Order", orderSchema),
  Analytics: mongoose.model("Analytics", analyticsSchema),
};
